/////////////////////////////////////////////////////////////////////////////
// Name:        mainframe.h
// Purpose:
// Author:      Michael Rynn
// Modified by:
// Created:     31/10/2013 06:55:37
// RCS-ID:
// Copyright:   Michael Rynn
// Licence:
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 31/10/2013 06:55:37

#ifndef _MAINFRAME_H_
#define _MAINFRAME_H_


/*!
 * Includes
 */

#include <wx/log.h>
#include <wx/thread.h>
#include <wx/timer.h>

////@begin includes
#include "wx/docview.h"
#include "wx/aui/auibook.h"
////@end includes

/*!
 * Forward declarations
 */



////@begin forward declarations
class wxAuiNotebook;
class LuaEdit;
class wxMenu;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define SYMBOL_MAINFRAME_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX
#define SYMBOL_MAINFRAME_TITLE _("MainFrame")
#define SYMBOL_MAINFRAME_IDNAME ID_MAINFRAME
#define SYMBOL_MAINFRAME_SIZE wxSize(400, 300)
#define SYMBOL_MAINFRAME_POSITION wxDefaultPosition
////@end control identifiers


/*!
 * MainFrame class declaration
 */



#include "database.hpp"
#include "plotxy.h"


class AppData;
class LuaEdit;
class wxProgressDialog;

class IdleTimer;

class ImportThread;

class MainFrame: public wxDocParentFrame
{
    DECLARE_CLASS( MainFrame )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    MainFrame( wxDocManager *manager, wxFrame *parent, wxWindowID id = SYMBOL_MAINFRAME_IDNAME, const wxString& caption = SYMBOL_MAINFRAME_TITLE, const wxPoint& pos = SYMBOL_MAINFRAME_POSITION, const wxSize& size = SYMBOL_MAINFRAME_SIZE, long style = SYMBOL_MAINFRAME_STYLE );

    bool Create( wxDocManager *manager, wxFrame *parent, wxWindowID id = SYMBOL_MAINFRAME_IDNAME, const wxString& caption = SYMBOL_MAINFRAME_TITLE, const wxPoint& pos = SYMBOL_MAINFRAME_POSITION, const wxSize& size = SYMBOL_MAINFRAME_SIZE, long style = SYMBOL_MAINFRAME_STYLE );

    /// Destructor
    ~MainFrame();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin MainFrame event handler declarations

    /// wxEVT_DESTROY event handler for ID_MAINFRAME
    void OnDestroy( wxWindowDestroyEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_NEW_SCRIPT
    void OnNewScriptClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_OPEN
    void OnOpenClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_RUN_LUA
    void OnRunLuaClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_EXIT
    void OnExitClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_VIEW_SERIES
    void OnViewSeriesClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM
    void OnMenuitemClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_BASELINE
    void GenBaseline( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_IMPORT_GISS
    void OnImportGissClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_GISS_STATION
    void OnGissImportStations( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_IMPORT_SHAPE_FILE
    void OnImportShapeFileClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_FIND_STATION
    void OnFindStationClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_SETS
    void OnSetsClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_LOG_VIEW
    void OnLogViewClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_LUA_COMMAND
    void OnLuaCommandClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_ABOUT
    void OnAboutClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_OPEN_PLOTFILE
    void OnOpenPlotfileClick( wxCommandEvent& event );

////@end MainFrame event handler declarations

////@begin MainFrame member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end MainFrame member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin MainFrame member variables
    wxAuiNotebook* book_;
    wxPanel* mLuaRun;
    wxTextCtrl* mLuaLog;
    wxTextCtrl* mEnter;
    wxButton* btnRun;
    wxMenu* mImport;
    wxMenu* mHelp;
    /// Control identifiers
    enum {
        ID_MAINFRAME = 10000,
        ID_AUINOTEBOOK = 10001,
        ID_LUA_PANEL = 10013,
        ID_LUA_LOG = 10017,
        ID_ENTER = 10015,
        ID_RUN = 10016,
        ID_NEW_SCRIPT = 10055,
        ID_RUN_LUA = 10056,
        ID_VIEW_SERIES = 10004,
        ID_IMPORT_MENU = 10025,
        ID_MENUITEM = 10002,
        ID_BASELINE = 10005,
        ID_IMPORT_GISS = 10006,
        ID_GISS_STATION = 10007,
        ID_IMPORT_SHAPE_FILE = 10003,
        ID_FIND_STATION = 10008,
        ID_SETS = 10009,
        ID_LOG_VIEW = 10010,
        ID_LUA_COMMAND = 10054,
        ID_ABOUT = 10011,
        ID_OPEN_PLOTFILE = 10012
    };
////@end MainFrame member variables


    void OpenDatabase();
    bool SelectImportFile(wxString& filepath);
    bool SelectGISSFile(wxString& filepath);
	bool SelectStationInfo(wxString& filepath);

    bool ImportCSV(const wxString& filepath);
    void ImportGiss(const wxString& filepath);
	void ImportStationInfo(const wxString& filepath);

	void DoPauseThread();
    void OnClose(wxCloseEvent& evt);
    void ImportProgress(double pcImported);
    void OnWorkerEvent(wxThreadEvent& event);

    PlotXY* NewPlot(const wxString& text);

    void  StartDBProgress(const std::string& path);
    void  EndDBProgress();

    void  OnTimerNotify();
    void  StartInitTimer();

    Database&      getDB();

    LuaEdit*  createLuaEdit(const std::string& tabname);


    wxLogWindow*    log_;
    AppData*        ap_;
protected:
    IdleTimer*          timer_;
    int                 timerState_;

    wxProgressDialog*   dlgProgress_;
    wxCriticalSection    threadCS_;
    ImportThread*        mThread_;

    std::unique_ptr<wxStreamToTextRedirector> logOut_;
    std::unique_ptr<wxStreamToTextRedirector> logError_;

    friend class ImportThread;

    void ModalProgressDlg(const wxString& title, const wxString &msg);

};




#endif
    // _MAINFRAME_H_
